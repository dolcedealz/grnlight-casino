// public/js/games/slots.js

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∏–≥—Ä—ã Slots —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é
const slotsGame = (() => {
  // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã
  const reels = [
    document.getElementById('reel1'),
    document.getElementById('reel2'),
    document.getElementById('reel3')
  ];
  const spinBtn = document.getElementById('spin-btn');
  const slotsResult = document.getElementById('slots-result');
  const slotsBet = document.getElementById('slots-bet');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
  let isSpinning = false;
  let symbols = ['üçí', 'üçã', 'üçá', 'üçä', 'üçâ', 'üíé', '7Ô∏è‚É£', 'ü§ë'];
  
  // –ê—É–¥–∏–æ —ç—Ñ—Ñ–µ–∫—Ç—ã
  let spinSound, winSound, loseSound;
  
  // –ó–Ω–∞—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ (–º–Ω–æ–∂–∏—Ç–µ–ª–∏)
  const symbolValues = {
    'üçí': 2,
    'üçã': 2,
    'üçá': 3,
    'üçä': 3,
    'üçâ': 4,
    'üíé': 5,
    '7Ô∏è‚É£': 10,
    'ü§ë': 15
  };
  
  // –û–ø–∏—Å–∞–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
  const winDescriptions = {
    fullMatch: {
      'üçí': '–¢—Ä–∏ –≤–∏—à–Ω–∏! –•2 –≤—ã–∏–≥—Ä—ã—à!',
      'üçã': '–¢—Ä–∏ –ª–∏–º–æ–Ω–∞! –•2 –≤—ã–∏–≥—Ä—ã—à!',
      'üçá': '–¢—Ä–∏ –≤–∏–Ω–æ–≥—Ä–∞–¥–∞! –•3 –≤—ã–∏–≥—Ä—ã—à!',
      'üçä': '–¢—Ä–∏ –∞–ø–µ–ª—å—Å–∏–Ω–∞! –•3 –≤—ã–∏–≥—Ä—ã—à!',
      'üçâ': '–¢—Ä–∏ –∞—Ä–±—É–∑–∞! –•4 –≤—ã–∏–≥—Ä—ã—à!',
      'üíé': '–¢—Ä–∏ –∞–ª–º–∞–∑–∞! –•5 –≤—ã–∏–≥—Ä—ã—à!',
      '7Ô∏è‚É£': '–î–∂–µ–∫–ø–æ—Ç! –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏! –•10 –≤—ã–∏–≥—Ä—ã—à!',
      'ü§ë': '–ë–æ–ª—å—à–æ–π –¥–∂–µ–∫–ø–æ—Ç! –•15 –≤—ã–∏–≥—Ä—ã—à!'
    },
    partialMatch: '–ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ! –ü–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–ª–æ–≤–∏–Ω—É –≤—ã–∏–≥—Ä—ã—à–∞!'
  };
  
  // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  function init() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã Slots');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    spinBtn.addEventListener('click', spin);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞—Ä–∞–±–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    populateReels();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–≤—É–∫–∏ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è)
    setupSounds();
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (slotsResult) slotsResult.style.display = 'none';
  }
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–≤—É–∫–æ–≤
  function setupSounds() {
    try {
      // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ-–∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
      const AudioContext = window.AudioContext || window.webkitAudioContext;
      if (AudioContext) {
        const audioCtx = new AudioContext();
        
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∏ –±—ã —Ä–µ–∞–ª—å–Ω—ã–µ –∑–≤—É–∫–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        spinSound = { play: () => console.log('–ó–≤—É–∫ –≤—Ä–∞—â–µ–Ω–∏—è') };
        winSound = { play: () => console.log('–ó–≤—É–∫ –≤—ã–∏–≥—Ä—ã—à–∞') };
        loseSound = { play: () => console.log('–ó–≤—É–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–∞') };
      }
    } catch (e) {
      console.log('–ê—É–¥–∏–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è', e);
    }
  }
  
  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤ —Å–∏–º–≤–æ–ª–∞–º–∏
  function populateReels() {
    reels.forEach(reel => {
      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
      reel.innerHTML = '';
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –±–ª–µ—Å–∫–∞
      const symbolElement = document.createElement('div');
      symbolElement.className = 'symbol';
      symbolElement.textContent = getRandomSymbol();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–ª–µ—Å–∫–∞
      const symbolContainer = document.createElement('div');
      symbolContainer.className = 'symbol-container';
      symbolContainer.appendChild(symbolElement);
      
      reel.appendChild(symbolContainer);
    });
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
  function getRandomSymbol() {
    const randomIndex = Math.floor(Math.random() * symbols.length);
    return symbols[randomIndex];
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∑–≤–µ—à–µ–Ω–Ω–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
  // –ë–æ–ª–µ–µ —Ä–µ–¥–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç –º–µ–Ω—å—à–∏–π —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è
  function getWeightedRandomSymbol() {
    const weights = {
      'üçí': 25, // 25% —à–∞–Ω—Å
      'üçã': 20, // 20% —à–∞–Ω—Å
      'üçá': 15, // 15% —à–∞–Ω—Å
      'üçä': 15, // 15% —à–∞–Ω—Å
      'üçâ': 10, // 10% —à–∞–Ω—Å
      'üíé': 8,  // 8% —à–∞–Ω—Å
      '7Ô∏è‚É£': 5,  // 5% —à–∞–Ω—Å
      'ü§ë': 2   // 2% —à–∞–Ω—Å
    };
    
    // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–π –≤–µ—Å
    const totalWeight = Object.values(weights).reduce((sum, weight) => sum + weight, 0);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ totalWeight
    let random = Math.random() * totalWeight;
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–∏–º–≤–æ–ª, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ª—É—á–∞–π–Ω–æ–º—É —á–∏—Å–ª—É
    for (const symbol in weights) {
      random -= weights[symbol];
      if (random <= 0) {
        return symbol;
      }
    }
    
    // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
    return symbols[0];
  }
  
  // –í—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤
  async function spin() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—Ä–∞—â–∞—é—Ç—Å—è –ª–∏ —É–∂–µ –±–∞—Ä–∞–±–∞–Ω—ã
    if (isSpinning) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏
    const betAmount = parseInt(slotsBet.value);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–≤–∫—É
    if (isNaN(betAmount) || betAmount <= 0) {
      window.casinoApp.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤
    if (betAmount > window.casinoApp.currentUser.balance) {
      window.casinoApp.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏');
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è
    isSpinning = true;
    spinBtn.disabled = true;
    spinBtn.textContent = '–í–†–ê–©–ï–ù–ò–ï...';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    if (slotsResult) {
      slotsResult.style.opacity = '0';
      slotsResult.style.transform = 'translateY(20px)';
      setTimeout(() => {
        slotsResult.textContent = '';
        slotsResult.className = 'result';
        slotsResult.style.display = 'none';
      }, 300);
    }
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –≤—Ä–∞—â–µ–Ω–∏—è
    if (spinSound) spinSound.play();
    
    // –ê–Ω–∏–º–∏—Ä—É–µ–º –±–∞—Ä–∞–±–∞–Ω—ã
    const spinPromises = reels.map((reel, index) => animateReel(reel, index));
    
    try {
      // –ñ–¥–µ–º, –ø–æ–∫–∞ –≤—Å–µ –±–∞—Ä–∞–±–∞–Ω—ã –æ—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è
      const finalSymbols = await Promise.all(spinPromises);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const result = checkWin(finalSymbols);
      
      // –í—ã—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
      const winAmount = result.win ? Math.floor(betAmount * result.multiplier) : 0;
      
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
      displayResult(result.win, winAmount, result.description);
      
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –ø–æ–±–µ–¥—ã –∏–ª–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏—è
      if (result.win && winSound) {
        winSound.play();
      } else if (!result.win && loseSound) {
        loseSound.play();
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const gameData = {
        symbols: finalSymbols,
        multiplier: result.multiplier,
        description: result.description
      };
      
      await window.casinoApp.processGameResult(
        'slots',
        betAmount,
        result.win ? 'win' : 'lose',
        winAmount,
        gameData
      );
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã:', error);
      window.casinoApp.showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    } finally {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      isSpinning = false;
      spinBtn.disabled = false;
      spinBtn.textContent = '–ö–†–£–¢–ò–¢–¨';
    }
  }
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–∞
  function animateReel(reel, index) {
    return new Promise(resolve => {
      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–∞—â–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å –∏–Ω–¥–µ–∫—Å–æ–º –±–∞—Ä–∞–±–∞–Ω–∞
      // –≠—Ç–æ —Å–æ–∑–¥–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞—Ä–∞–±–∞–Ω–æ–≤
      const spins = 15 + index * 5;
      let counter = 0;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–∏–º–≤–æ–ª
      let currentSymbol = '';
      
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
      let symbolsArray = [];
      for (let i = 0; i < spins; i++) {
        symbolsArray.push(getWeightedRandomSymbol());
      }
      
      // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª - —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      // –ú—ã –º–æ–∂–µ–º –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–º –¥–ª—è –Ω—É–∂–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–∏–≥—Ä—ã—à–∞
      currentSymbol = symbolsArray[symbolsArray.length - 1];
      
      // –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–Ω–∏–º–∞—Ü–∏–∏
      const interval = setInterval(() => {
        if (counter >= symbolsArray.length) {
          clearInterval(interval);
          
          // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
          const symbolContainer = reel.querySelector('.symbol-container');
          if (symbolContainer) {
            symbolContainer.classList.add('stopped');
          }
          
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º transform
          reel.style.transform = 'translateY(0)';
          
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
          setTimeout(() => {
            resolve(currentSymbol);
          }, 200);
          
          return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª
        const symbolElement = reel.querySelector('.symbol');
        if (symbolElement) {
          const newSymbol = symbolsArray[counter];
          symbolElement.textContent = newSymbol;
          currentSymbol = newSymbol;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –¥—Ä–æ–∂–∞–Ω–∏—è
        const randomOffset = Math.random() * 10 - 5;
        reel.style.transform = `translateY(${randomOffset}px)`;
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        counter++;
      }, 100 - (index * 10)); // –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∏–Ω–¥–µ–∫—Å–∞ –±–∞—Ä–∞–±–∞–Ω–∞
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
  function checkWin(symbols) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (–¥–∂–µ–∫–ø–æ—Ç)
    if (symbols[0] === symbols[1] && symbols[1] === symbols[2]) {
      return {
        win: true,
        multiplier: symbolValues[symbols[0]],
        description: winDescriptions.fullMatch[symbols[0]]
      };
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤
    if (symbols[0] === symbols[1] || symbols[1] === symbols[2] || symbols[0] === symbols[2]) {
      // –ù–∞—Ö–æ–¥–∏–º —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∫ –º–∏–Ω–∏–º—É–º –¥–≤–∞–∂–¥—ã
      let matchedSymbol;
      
      if (symbols[0] === symbols[1]) {
        matchedSymbol = symbols[0];
      } else if (symbols[1] === symbols[2]) {
        matchedSymbol = symbols[1];
      } else {
        matchedSymbol = symbols[0];
      }
      
      return {
        win: true,
        multiplier: Math.floor(symbolValues[matchedSymbol] / 2), // –ü–æ–ª–æ–≤–∏–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞ –¥–≤–µ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ
        description: winDescriptions.partialMatch
      };
    }
    
    // –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    return {
      win: false,
      multiplier: 0,
      description: '–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!'
    };
  }
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä–æ–∫—É
  function displayResult(isWin, amount, description) {
    if (!slotsResult) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if (isWin) {
      slotsResult.innerHTML = `
        <div class="win-icon">üéâ</div>
        <div class="win-title">–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${amount} ‚≠ê!</div>
        <div class="win-description">${description}</div>
      `;
      slotsResult.classList.add('win');
      slotsResult.classList.remove('lose');
    } else {
      slotsResult.innerHTML = `
        <div class="lose-icon">üò¢</div>
        <div class="lose-title">–ù–µ –ø–æ–≤–µ–∑–ª–æ</div>
        <div class="lose-description">${description}</div>
      `;
      slotsResult.classList.add('lose');
      slotsResult.classList.remove('win');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    slotsResult.style.display = 'block';
    setTimeout(() => {
      slotsResult.style.opacity = '1';
      slotsResult.style.transform = 'translateY(0)';
    }, 50);
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  document.addEventListener('DOMContentLoaded', init);
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  return {
    init,
    spin
  };
})();